// Vitest Snapshot v1

exports[`EntitySlice > createEntitySlice > creates a slice with entity logic 1`] = `
{
  "error": false,
  "meta": {
    Symbol(@sables/lazyMeta): {
      "observers": Set {},
      "slices": Set {
        {
          "actions": {
            "addBook": [Function],
            "addBooks": [Function],
            "addMany": [Function],
            "addOne": [Function],
            "denoteBestBook": [Function],
            "removeAll": [Function],
            "removeAllBooks": [Function],
            "removeBook": [Function],
            "removeBooks": [Function],
            "removeMany": [Function],
            "removeOne": [Function],
            "setAll": [Function],
            "setAllBooks": [Function],
            "setBook": [Function],
            "setBooks": [Function],
            "setMany": [Function],
            "setOne": [Function],
            "updateBook": [Function],
            "updateBooks": [Function],
            "updateMany": [Function],
            "updateOne": [Function],
            "upsertBook": [Function],
            "upsertBooks": [Function],
            "upsertMany": [Function],
            "upsertOne": [Function],
          },
          "caseReducers": {
            "addBook": [Function],
            "addBooks": [Function],
            "addMany": [Function],
            "addOne": [Function],
            "denoteBestBook": [Function],
            "removeAll": [Function],
            "removeAllBooks": [Function],
            "removeBook": [Function],
            "removeBooks": [Function],
            "removeMany": [Function],
            "removeOne": [Function],
            "setAll": [Function],
            "setAllBooks": [Function],
            "setBook": [Function],
            "setBooks": [Function],
            "setMany": [Function],
            "setOne": [Function],
            "updateBook": [Function],
            "updateBooks": [Function],
            "updateMany": [Function],
            "updateOne": [Function],
            "upsertBook": [Function],
            "upsertBooks": [Function],
            "upsertMany": [Function],
            "upsertOne": [Function],
          },
          "entityAdapter": {
            "addMany": [Function],
            "addOne": [Function],
            "getInitialState": [Function],
            "getSelectors": [Function],
            "removeAll": [Function],
            "removeMany": [Function],
            "removeOne": [Function],
            "selectId": [Function],
            "setAll": [Function],
            "setMany": [Function],
            "setOne": [Function],
            "sortComparer": false,
            "updateMany": [Function],
            "updateOne": [Function],
            "upsertMany": [Function],
            "upsertOne": [Function],
          },
          "getInitialState": [Function],
          "name": "books",
          "reducer": [Function],
          "selectBooksState": [Function],
          "selector": [Function],
          "selectors": {
            "selectAll": [Function],
            "selectAllBooks": [Function],
            "selectBestBook": [Function],
            "selectBestBookPayload": [Function],
            "selectBookById": [Function],
            "selectBookCount": [Function],
            "selectBookDictionary": [Function],
            "selectBookIds": [Function],
            "selectById": [Function],
            "selectEntities": [Function],
            "selectIds": [Function],
            "selectTotal": [Function],
          },
        },
      },
    },
  },
  "payload": {
    "id": "1",
    "name": "Goosebumps: Night of the Living Dummy",
  },
  "type": "books/addBook",
}
`;

exports[`EntitySlice > createEntitySlice > creates a slice with entity logic 2`] = `
{
  "books": {
    "bestBookPayload": undefined,
    "entities": {
      "1": {
        "id": "1",
        "name": "Goosebumps: Night of the Living Dummy",
      },
    },
    "ids": [
      "1",
    ],
  },
}
`;

exports[`EntitySlice > createEntitySlice > creates a slice with entity logic 3`] = `
{
  "id": "1",
  "name": "Goosebumps: Night of the Living Dummy",
}
`;
